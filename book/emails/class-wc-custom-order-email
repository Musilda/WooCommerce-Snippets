if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly
/**
 * 
 * @since 0.1
 * @extends \WC_Email
 */
class WC_Custom_Order_Email extends WC_Email {
	
  	/**
	 * Unique identifier
	 *    
	 * @since    1.0.0
	 *
	 * @var      string
	 */
	protected $plugin_slug = 'custom-email';
  
  
  	/**
	 * Set email defaults
	 *
	 * @since 0.1
	 */
	public function __construct() {
		
    		$this->id          = 'wc_custom_order_email';
		$this->title       = __('Info about package', $this->plugin_slug);
		$this->description = __('Info about package', $this->plugin_slug);
		$this->heading     = __('Your package', $this->plugin_slug);
		$this->subject     = __('Your package from {site_title}', $this->plugin_slug);
    
		$this->template_html  = 'emails/custom-order-email.php';
		$this->template_plain = 'emails/plain/custom-order-email.php';
		
		parent::__construct();
	  
  
  	}
	/**
	 * Determine if the email should actually be sent and setup email merge variables
	 *
	 * @since 0.1
	 * @param int $order_id
	 */
	public function trigger( $order_id ) {
  
		if ( $order_id ) {
			$this->object 		       = wc_get_order( $order_id );  
      			$this->recipient               = $this->object->billing_email;
			
			$this->find['order-date']      = '{order_date}';
			$this->find['order-number']    = '{order_number}';

			$this->replace['order-date']   = date_i18n( 
								wc_date_format(), 
								strtotime( $this->object->order_date ) 
								);
			$this->replace['order-number'] = $this->object->get_order_number();
		}

		if ( ! $this->is_enabled() || ! $this->get_recipient() ) {
			return;
		}

		return $this->send( 
      			$this->get_recipient(), 
      			$this->get_subject(), 
      			$this->get_content(), 
      			$this->get_headers(),
      			$this->get_attachments() 
     		);
    
	}
	
  
  	/**
	 * get_content_html function.
	 *
	 * @since 0.1
	 * @return string
	 */
	public function get_content_html() {
		ob_start();

		woocommerce_get_template( $this->template_html, array(
			'order'         => $this->object,
			'email_heading' => $this->get_heading()
		) );
        
		return ob_get_clean();
	}
	
  
  	/**
	 * get_content_plain function.
	 *
	 * @since 0.1
	 * @return string
	 */
	public function get_content_plain() {
		ob_start();
		woocommerce_get_template( $this->template_plain, array(
			'order'         => $this->object,
			'email_heading' => $this->get_heading()
		) );
		return ob_get_clean();
	}     
	
  
  	/**
	 * Initialise Settings Form Fields
	 *
	 * @access public
	 * @return void
	 */
	public function init_form_fields() {
  
  
  		$types = array(
			'plain' => __( 'Plain text', $this->plugin_slug )
		);

		if ( class_exists( 'DOMDocument' ) ) {
			$types['html'] = __( 'HTML', $this->plugin_slug );
			$types['multipart'] = __( 'Multipart', $this->plugin_slug );
		}
    
  
		$this->form_fields = array(
			'enabled' => array(
				'title' 		=> __( 'Enable', $this->plugin_slug ),
				'type' 			=> 'checkbox',
				'label' 		=> __( 'Enable email', $this->plugin_slug ),
				'default' 		=> 'yes'
			),
			'subject' => array(
				'title' 		=> __( 'Subject', $this->plugin_slug ),
				'type' 			=> 'text',
				'placeholder' 	=> '',
				'default' 		=> ''
			),
			'heading' => array(
				'title' 		=> __( 'Heading', $this->plugin_slug ),
				'type' 			=> 'text',
				'placeholder' 	=> '',
				'default' 		=> ''
			),
			'email_type' => array(
				'title' 		=> __( 'Type', $this->plugin_slug ),
				'type' 			=> 'select',
				'description' 	=> __( 'Select type.', $this->plugin_slug ),
				'default' 		=> 'html',
				'class'			=> 'email_type wc-enhanced-select',
				'options'		=> $types
			)
		);
	}
  

} 
